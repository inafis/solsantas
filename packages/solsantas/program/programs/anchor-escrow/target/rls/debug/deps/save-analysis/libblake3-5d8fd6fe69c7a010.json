{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0","program":"/Users/khalilbrown/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","blake3","--edition=2018","/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"crypto-mac\"","--cfg","feature=\"default\"","--cfg","feature=\"digest\"","--cfg","feature=\"std\"","--cfg","feature=\"traits-preview\"","-C","metadata=5d8fd6fe69c7a010","-C","extra-filename=-5d8fd6fe69c7a010","--out-dir","/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps","-L","dependency=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps","--extern","arrayref=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libarrayref-c37d9abb7a38e54f.rmeta","--extern","arrayvec=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libarrayvec-c7f3753606ab2357.rmeta","--extern","cfg_if=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libcfg_if-d172bfe74ce78809.rmeta","--extern","constant_time_eq=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libconstant_time_eq-337a162c71799f82.rmeta","--extern","crypto_mac=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libcrypto_mac-18bdfce33abafe50.rmeta","--extern","digest=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libdigest-e6154ce40b7d095b.rmeta","--cap-lints","allow","-L","native=/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/build/blake3-1b23a240cd130407/out","--cfg","blake3_neon","-l","static=blake3_neon","--error-format=json","--sysroot","/Users/khalilbrown/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/khalilbrown/solsantas/packages/solsantas/program/programs/anchor-escrow/target/rls/debug/deps/libblake3-5d8fd6fe69c7a010.rmeta"},"prelude":{"crate_id":{"name":"blake3","disambiguator":[16024877468326744364,0]},"crate_root":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src","external_crates":[{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","num":18,"id":{"name":"arrayref","disambiguator":[15954986131563589054,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":19,"id":{"name":"crypto_mac","disambiguator":[8387491365035027477,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":20,"id":{"name":"generic_array","disambiguator":[10624610747819982784,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":21,"id":{"name":"serde","disambiguator":[1944982671819270053,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":22,"id":{"name":"serde_derive","disambiguator":[3274433494786250145,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":23,"id":{"name":"typenum","disambiguator":[4547822893613014924,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":24,"id":{"name":"subtle","disambiguator":[16871305718537352862,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","num":25,"id":{"name":"digest","disambiguator":[17550506918056042686,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":26,"id":{"name":"arrayvec","disambiguator":[10012633359107026970,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","num":27,"id":{"name":"cfg_if","disambiguator":[16095159455043656986,0]}},{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","num":28,"id":{"name":"constant_time_eq","disambiguator":[13581994656012271904,0]}}],"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":0,"byte_end":57817,"line_start":1,"line_end":1466,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":84916,"byte_end":84926,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"alias_span":null,"name":"crypto_mac","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":84936,"byte_end":84942,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":140}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":0,"byte_end":57817,"line_start":1,"line_end":1466,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":62},{"krate":0,"index":85},{"krate":0,"index":140},{"krate":0,"index":191},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":262},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":624},{"krate":0,"index":632},{"krate":0,"index":298},{"krate":0,"index":634},{"krate":0,"index":643},{"krate":0,"index":303},{"krate":0,"index":312},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":673},{"krate":0,"index":678},{"krate":0,"index":341},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":364},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374}],"decl_id":null,"docs":" The official Rust implementation of the [BLAKE3] cryptographic hash\n function.","sig":null,"attributes":[{"value":"/ The official Rust implementation of the [BLAKE3] cryptographic hash","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ function.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":72,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":90,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":105,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":109,"byte_end":116,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":117,"byte_end":176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/ // Hash an input all at once.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":177,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/ let hash1 = blake3::hash(b\"foobarbaz\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":211,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":255,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":259,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":295,"byte_end":338,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":339,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":366,"byte_end":392,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":393,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ let hash2 = hasher.finalize();","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":420,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(hash1, hash2);","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":455,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":485,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":489,"byte_end":556,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":557,"byte_end":588,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":589,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":621,"byte_end":671,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":672,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], hash1.as_bytes());","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":709,"byte_end":757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":758,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":766,"byte_end":769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Print a hash as hex.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":770,"byte_end":797,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ println!(\"{}\", hash1);","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":798,"byte_end":824,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":825,"byte_end":837,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":838,"byte_end":845,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":846,"byte_end":853,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":854,"byte_end":857,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":858,"byte_end":878,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":879,"byte_end":882,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `std` feature (the only feature enabled by default) is required for","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":883,"byte_end":958,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ implementations of the [`Write`] and [`Seek`] traits, and also for runtime","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":959,"byte_end":1037,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ CPU feature detection on x86. If this feature is disabled, the only way to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1038,"byte_end":1116,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ use the x86 SIMD implementations is to enable the corresponding instruction","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1117,"byte_end":1196,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ sets globally, with e.g. `RUSTFLAGS=\"-C target-cpu=native\"`. The resulting","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1197,"byte_end":1275,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ binary will not be portable to other machines.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1276,"byte_end":1326,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1327,"byte_end":1330,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The `rayon` feature (disabled by default, but enabled for [docs.rs]) adds","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1331,"byte_end":1408,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ the [`Hasher::update_rayon`] method, for multithreaded hashing. However,","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1409,"byte_end":1485,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ even if this feature is enabled, all other APIs remain single-threaded.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1486,"byte_end":1561,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1562,"byte_end":1565,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The NEON implementation is enabled by default for AArch64 but requires the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1566,"byte_end":1644,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ `neon` feature for other ARM targets. Not all ARMv7 CPUs support NEON, and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1645,"byte_end":1723,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ enabling this feature will produce a binary that's not portable to CPUs","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1724,"byte_end":1799,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ without NEON support.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1800,"byte_end":1825,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `traits-preview` feature enables implementations of traits from the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1830,"byte_end":1905,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ RustCrypto [`digest`] and [`crypto-mac`] crates, and re-exports those crates","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1906,"byte_end":1986,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ as `traits::digest` and `traits::crypto_mac`. However, the traits aren't","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":1987,"byte_end":2063,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ stable, and they're expected to change in incompatible ways before those","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2064,"byte_end":2140,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ crates reach 1.0. For that reason, this crate makes no SemVer guarantees for","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2141,"byte_end":2221,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ this feature, and callers who use it should expect breaking changes between","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2222,"byte_end":2301,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ patch versions. (The \"-preview\" feature name follows the conventions of the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2302,"byte_end":2381,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ RustCrypto [`signature`] crate.)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2382,"byte_end":2418,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2419,"byte_end":2422,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_rayon`]: struct.Hasher.html#method.update_rayon","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2423,"byte_end":2491,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/ [BLAKE3]: https://blake3.io","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2492,"byte_end":2523,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ [Rayon]: https://github.com/rayon-rs/rayon","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2524,"byte_end":2570,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2571,"byte_end":2602,"line_start":63,"line_end":63,"column_start":1,"column_end":32}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2603,"byte_end":2667,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/ [`Seek`]: https://doc.rust-lang.org/std/io/trait.Seek.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2668,"byte_end":2730,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/ [`digest`]: https://crates.io/crates/digest","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2731,"byte_end":2778,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`crypto-mac`]: https://crates.io/crates/crypto-mac","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2779,"byte_end":2834,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ [`signature`]: https://crates.io/crates/signature","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":2835,"byte_end":2888,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"guts","qualname":"::guts","value":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":6},{"krate":0,"index":11}],"decl_id":null,"docs":" This undocumented and unstable module is for use cases like the `bao` crate,\n which need to traverse the BLAKE3 Merkle tree and work with chunk and parent\n chaining values directly. There might be breaking changes to this module\n between patch versions.","sig":null,"attributes":[{"value":"/ This undocumented and unstable module is for use cases like the `bao` crate,","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":57819,"byte_end":57899,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ which need to traverse the BLAKE3 Merkle tree and work with chunk and parent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":57900,"byte_end":57980,"line_start":2,"line_end":2,"column_start":1,"column_end":81}},{"value":"/ chaining values directly. There might be breaking changes to this module","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":57981,"byte_end":58057,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ between patch versions.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58058,"byte_end":58085,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58086,"byte_end":58089,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ We could stabilize something like this module in the future. If you have a","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58090,"byte_end":58168,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ use case for it, please let us know by filing a GitHub issue.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58169,"byte_end":58234,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58246,"byte_end":58255,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"BLOCK_LEN","qualname":"::guts::BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58279,"byte_end":58288,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"CHUNK_LEN","qualname":"::guts::CHUNK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58340,"byte_end":58350,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ChunkState","qualname":"::guts::ChunkState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58544,"byte_end":58547,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<ChunkState>::new","value":"pub fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58772,"byte_end":58775,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkState>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58751,"byte_end":58760,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58847,"byte_end":58853,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"update","qualname":"<ChunkState>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58826,"byte_end":58835,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58955,"byte_end":58963,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ChunkState>::finalize","value":"pub fn finalize(&Self, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":59313,"byte_end":59322,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"parent_cv","qualname":"::guts::parent_cv","value":"pub fn parent_cv(&crate::Hash, &crate::Hash, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":33},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Undocumented and unstable, for benchmarks only.\n","sig":null,"attributes":[{"value":"/ Undocumented and unstable, for benchmarks only.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":3240,"byte_end":3291,"line_start":82,"line_end":82,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":383},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":61059,"byte_end":61074,"line_start":14,"line_end":14,"column_start":19,"column_end":34},"name":"MAX_SIMD_DEGREE","qualname":"::platform::MAX_SIMD_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":384},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":61806,"byte_end":61826,"line_start":34,"line_end":34,"column_start":19,"column_end":39},"name":"MAX_SIMD_DEGREE_OR_2","qualname":"::platform::MAX_SIMD_DEGREE_OR_2","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":61966,"byte_end":61974,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Portable","qualname":"::platform::Platform::Portable","value":"Platform::Portable","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62321,"byte_end":62325,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"NEON","qualname":"::platform::Platform::NEON","value":"Platform::NEON","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_neon)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62297,"byte_end":62316,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":385},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":61951,"byte_end":61959,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Platform","qualname":"::platform::Platform","value":"pub enum Platform { Portable, NEON, }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62388,"byte_end":62394,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"detect","qualname":"<Platform>::detect","value":"pub fn detect() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62350,"byte_end":62376,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":63181,"byte_end":63192,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"simd_degree","qualname":"<Platform>::simd_degree","value":"pub fn simd_degree(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":63891,"byte_end":63908,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"compress_in_place","qualname":"<Platform>::compress_in_place","value":"pub fn compress_in_place(&Self, &mut CVWords, &[u8; ], u8, u64, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":65284,"byte_end":65296,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"compress_xof","qualname":"<Platform>::compress_xof","value":"pub fn compress_xof(&Self, &CVWords, &[u8; ], u8, u64, u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":67215,"byte_end":67224,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"hash_many","qualname":"<Platform>::hash_many","value":"pub fn hash_many<const N:\n                 usize>(&Self, &[&[u8; ]], &CVWords, u64, IncrementCounter,\n                        u8, u8, u8, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":70283,"byte_end":70291,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"portable","qualname":"<Platform>::portable","value":"pub fn portable() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":71232,"byte_end":71236,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"neon","qualname":"<Platform>::neon","value":"pub fn neon() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_neon)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":71201,"byte_end":71220,"line_start":318,"line_end":318,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":73674,"byte_end":73696,"line_start":418,"line_end":418,"column_start":8,"column_end":30},"name":"words_from_le_bytes_32","qualname":"::platform::words_from_le_bytes_32","value":"pub fn words_from_le_bytes_32(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":73649,"byte_end":73666,"line_start":417,"line_end":417,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":74295,"byte_end":74317,"line_start":432,"line_end":432,"column_start":8,"column_end":30},"name":"words_from_le_bytes_64","qualname":"::platform::words_from_le_bytes_64","value":"pub fn words_from_le_bytes_64(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":74270,"byte_end":74287,"line_start":431,"line_end":431,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":75434,"byte_end":75456,"line_start":454,"line_end":454,"column_start":8,"column_end":30},"name":"le_bytes_from_words_32","qualname":"::platform::le_bytes_from_words_32","value":"pub fn le_bytes_from_words_32(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":75409,"byte_end":75426,"line_start":453,"line_end":453,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":76040,"byte_end":76062,"line_start":468,"line_end":468,"column_start":8,"column_end":30},"name":"le_bytes_from_words_64","qualname":"::platform::le_bytes_from_words_64","value":"pub fn le_bytes_from_words_64(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":76015,"byte_end":76032,"line_start":467,"line_end":467,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":186}],"decl_id":null,"docs":" Implementations of commonly used traits like\n [`digest::Digest`](https://crates.io/crates/digest) and\n [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).\n","sig":null,"attributes":[{"value":"cfg(feature = \"traits-preview\")","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":3941,"byte_end":3975,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ Implementations of commonly used traits like","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":84736,"byte_end":84784,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/ [`digest::Digest`](https://crates.io/crates/digest) and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":84785,"byte_end":84844,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/ [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":84845,"byte_end":84906,"line_start":3,"line_end":3,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":235},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":4252,"byte_end":4259,"line_start":126,"line_end":126,"column_start":11,"column_end":18},"name":"OUT_LEN","qualname":"::OUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a [`Hash`](struct.Hash.html), 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a [`Hash`](struct.Hash.html), 32.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":4181,"byte_end":4241,"line_start":125,"line_end":125,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":236},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":4322,"byte_end":4329,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a key, 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a key, 32.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":4274,"byte_end":4311,"line_start":128,"line_end":128,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7366,"byte_end":7370,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"","parent":null,"children":[],"decl_id":null,"docs":" An output of the default size, 32 bytes, which provides constant-time\n equality checking.","sig":null,"attributes":[{"value":"/ An output of the default size, 32 bytes, which provides constant-time","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6069,"byte_end":6142,"line_start":178,"line_end":178,"column_start":1,"column_end":74}},{"value":"/ equality checking.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6143,"byte_end":6165,"line_start":179,"line_end":179,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6166,"byte_end":6169,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ `Hash` implements [`From`] and [`Into`] for `[u8; 32]`, and it provides an","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6170,"byte_end":6248,"line_start":181,"line_end":181,"column_start":1,"column_end":79}},{"value":"/ explicit [`as_bytes`] method returning `&[u8; 32]`. However, byte arrays","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6249,"byte_end":6325,"line_start":182,"line_end":182,"column_start":1,"column_end":77}},{"value":"/ and slices don't provide constant-time equality checking, which is often a","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6326,"byte_end":6404,"line_start":183,"line_end":183,"column_start":1,"column_end":79}},{"value":"/ security requirement in software that handles private data. `Hash` doesn't","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6405,"byte_end":6483,"line_start":184,"line_end":184,"column_start":1,"column_end":79}},{"value":"/ implement [`Deref`] or [`AsRef`], to avoid situations where a type","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6484,"byte_end":6554,"line_start":185,"line_end":185,"column_start":1,"column_end":71}},{"value":"/ conversion happens implicitly and the constant-time property is","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6555,"byte_end":6622,"line_start":186,"line_end":186,"column_start":1,"column_end":68}},{"value":"/ accidentally lost.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6623,"byte_end":6645,"line_start":187,"line_end":187,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6646,"byte_end":6649,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `Hash` provides the [`to_hex`] and [`from_hex`] methods for converting to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6650,"byte_end":6727,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ and from hexadecimal. It also implements [`Display`] and [`FromStr`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6728,"byte_end":6801,"line_start":190,"line_end":190,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6802,"byte_end":6805,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6806,"byte_end":6873,"line_start":192,"line_end":192,"column_start":1,"column_end":68}},{"value":"/ [`Into`]: https://doc.rust-lang.org/std/convert/trait.Into.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6874,"byte_end":6941,"line_start":193,"line_end":193,"column_start":1,"column_end":68}},{"value":"/ [`as_bytes`]: #method.as_bytes","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6942,"byte_end":6976,"line_start":194,"line_end":194,"column_start":1,"column_end":35}},{"value":"/ [`Deref`]: https://doc.rust-lang.org/stable/std/ops/trait.Deref.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":6977,"byte_end":7049,"line_start":195,"line_end":195,"column_start":1,"column_end":73}},{"value":"/ [`AsRef`]: https://doc.rust-lang.org/std/convert/trait.AsRef.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7050,"byte_end":7119,"line_start":196,"line_end":196,"column_start":1,"column_end":70}},{"value":"/ [`to_hex`]: #method.to_hex","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7120,"byte_end":7150,"line_start":197,"line_end":197,"column_start":1,"column_end":31}},{"value":"/ [`from_hex`]: #method.from_hex","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7151,"byte_end":7185,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7186,"byte_end":7255,"line_start":199,"line_end":199,"column_start":1,"column_end":70}},{"value":"/ [`FromStr`]: https://doc.rust-lang.org/std/str/trait.FromStr.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7256,"byte_end":7325,"line_start":200,"line_end":200,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7606,"byte_end":7614,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The raw bytes of the `Hash`. Note that byte arrays don't provide\n constant-time equality checking, so if  you need to compare hashes,\n prefer the `Hash` type.\n","sig":null,"attributes":[{"value":"/ The raw bytes of the `Hash`. Note that byte arrays don't provide","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7404,"byte_end":7472,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ constant-time equality checking, so if  you need to compare hashes,","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7477,"byte_end":7548,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ prefer the `Hash` type.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7553,"byte_end":7580,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7585,"byte_end":7594,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8082,"byte_end":8088,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> ArrayString<>","parent":null,"children":[],"decl_id":null,"docs":" Encode a `Hash` in lowercase hexadecimal.","sig":null,"attributes":[{"value":"/ Encode a `Hash` in lowercase hexadecimal.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7669,"byte_end":7714,"line_start":213,"line_end":213,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7719,"byte_end":7722,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The returned [`ArrayString`] is a fixed size and doesn't allocate memory","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7727,"byte_end":7803,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ on the heap. Note that [`ArrayString`] doesn't provide constant-time","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7808,"byte_end":7880,"line_start":216,"line_end":216,"column_start":5,"column_end":77}},{"value":"/ equality checking, so if you need to compare hashes, prefer the `Hash`","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7885,"byte_end":7959,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ type.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7964,"byte_end":7973,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7978,"byte_end":7981,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`ArrayString`]: https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayString.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7986,"byte_end":8070,"line_start":220,"line_end":220,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8806,"byte_end":8814,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"from_hex","qualname":"<Hash>::from_hex","value":"pub fn from_hex<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self, HexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a `Hash` from hexadecimal. Both uppercase and lowercase ASCII\n bytes are supported.","sig":null,"attributes":[{"value":"/ Decode a `Hash` from hexadecimal. Both uppercase and lowercase ASCII","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8385,"byte_end":8457,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ bytes are supported.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8462,"byte_end":8486,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8491,"byte_end":8494,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Any byte outside the ranges `'0'...'9'`, `'a'...'f'`, and `'A'...'F'`","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8499,"byte_end":8572,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ results in an error. An input length other than 64 also results in an","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8577,"byte_end":8650,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ error.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8655,"byte_end":8665,"line_start":236,"line_end":236,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8670,"byte_end":8673,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that `Hash` also implements `FromStr`, so `Hash::from_hex(\"...\")`","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8678,"byte_end":8752,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ is equivalent to `\"...\".parse()`.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":8757,"byte_end":8794,"line_start":239,"line_end":239,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":606},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11817,"byte_end":11825,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"HexError","qualname":"::HexError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type for [`Hash::from_hex`].","sig":null,"attributes":[{"value":"/ The error type for [`Hash::from_hex`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11490,"byte_end":11532,"line_start":333,"line_end":333,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11533,"byte_end":11536,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ The `.to_string()` representation of this error currently distinguishes between bad length","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11537,"byte_end":11631,"line_start":335,"line_end":335,"column_start":1,"column_end":95}},{"value":"/ errors and bad character errors. This is to help with logging and debugging, but it isn't a","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11632,"byte_end":11727,"line_start":336,"line_end":336,"column_start":1,"column_end":96}},{"value":"/ stable API detail, and it may change at any time.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11728,"byte_end":11781,"line_start":337,"line_end":337,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":650},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18127,"byte_end":18130,"line_start":541,"line_end":541,"column_start":5,"column_end":8},"name":"Yes","qualname":"::IncrementCounter::Yes","value":"IncrementCounter::Yes","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18136,"byte_end":18138,"line_start":542,"line_end":542,"column_start":5,"column_end":7},"name":"No","qualname":"::IncrementCounter::No","value":"IncrementCounter::No","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":649},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18104,"byte_end":18120,"line_start":540,"line_end":540,"column_start":10,"column_end":26},"name":"IncrementCounter","qualname":"::IncrementCounter","value":"pub enum IncrementCounter { Yes, No, }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":652}],"decl_id":null,"docs":" Undocumented and unstable, for benchmarks only.\n","sig":null,"attributes":[{"value":"/ Undocumented and unstable, for benchmarks only.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18005,"byte_end":18056,"line_start":537,"line_end":537,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29041,"byte_end":29045,"line_start":812,"line_end":812,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"pub fn hash(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The default hash function.","sig":null,"attributes":[{"value":"/ The default hash function.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28658,"byte_end":28688,"line_start":802,"line_end":802,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28689,"byte_end":28692,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ For an incremental version that accepts multiple writes, see","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28693,"byte_end":28757,"line_start":804,"line_end":804,"column_start":1,"column_end":65}},{"value":"/ [`Hasher::update`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28758,"byte_end":28781,"line_start":805,"line_end":805,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28782,"byte_end":28785,"line_start":806,"line_end":806,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::finalize_xof`] and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28786,"byte_end":28860,"line_start":807,"line_end":807,"column_start":1,"column_end":75}},{"value":"/ [`OutputReader`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28861,"byte_end":28882,"line_start":808,"line_end":808,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28883,"byte_end":28886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28887,"byte_end":28963,"line_start":810,"line_end":810,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":28964,"byte_end":29033,"line_start":811,"line_end":811,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29805,"byte_end":29815,"line_start":830,"line_end":830,"column_start":8,"column_end":18},"name":"keyed_hash","qualname":"::keyed_hash","value":"pub fn keyed_hash(&[u8; ], &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The keyed hash function.","sig":null,"attributes":[{"value":"/ The keyed hash function.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29140,"byte_end":29168,"line_start":816,"line_end":816,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29169,"byte_end":29172,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ This is suitable for use as a message authentication code, for example to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29173,"byte_end":29250,"line_start":818,"line_end":818,"column_start":1,"column_end":78}},{"value":"/ replace an HMAC instance. In that use case, the constant-time equality","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29251,"byte_end":29325,"line_start":819,"line_end":819,"column_start":1,"column_end":75}},{"value":"/ checking provided by [`Hash`](struct.Hash.html) is almost always a security","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29326,"byte_end":29405,"line_start":820,"line_end":820,"column_start":1,"column_end":80}},{"value":"/ requirement, and callers need to be careful not to compare MACs as raw","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29406,"byte_end":29480,"line_start":821,"line_end":821,"column_start":1,"column_end":75}},{"value":"/ bytes.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29481,"byte_end":29491,"line_start":822,"line_end":822,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29492,"byte_end":29495,"line_start":823,"line_end":823,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::new_keyed`],","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29496,"byte_end":29564,"line_start":824,"line_end":824,"column_start":1,"column_end":69}},{"value":"/ [`Hasher::finalize_xof`], and [`OutputReader`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29565,"byte_end":29616,"line_start":825,"line_end":825,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29617,"byte_end":29620,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29621,"byte_end":29697,"line_start":827,"line_end":827,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::new_keyed`] and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29698,"byte_end":29727,"line_start":828,"line_end":828,"column_start":1,"column_end":30}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":29728,"byte_end":29797,"line_start":829,"line_end":829,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":337},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":32054,"byte_end":32064,"line_start":870,"line_end":870,"column_start":8,"column_end":18},"name":"derive_key","qualname":"::derive_key","value":"pub fn derive_key(&str, &[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The key derivation function.","sig":null,"attributes":[{"value":"/ The key derivation function.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30007,"byte_end":30039,"line_start":835,"line_end":835,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30040,"byte_end":30043,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Given cryptographic key material of any length and a context string of any","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30044,"byte_end":30122,"line_start":837,"line_end":837,"column_start":1,"column_end":79}},{"value":"/ length, this function outputs a 32-byte derived subkey. **The context string","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30123,"byte_end":30203,"line_start":838,"line_end":838,"column_start":1,"column_end":81}},{"value":"/ should be hardcoded, globally unique, and application-specific.** A good","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30204,"byte_end":30280,"line_start":839,"line_end":839,"column_start":1,"column_end":77}},{"value":"/ default format for such strings is `\"[application] [commit timestamp]","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30281,"byte_end":30354,"line_start":840,"line_end":840,"column_start":1,"column_end":74}},{"value":"/ [purpose]\"`, e.g., `\"example.com 2019-12-25 16:18:03 session tokens v1\"`.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30355,"byte_end":30432,"line_start":841,"line_end":841,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30433,"byte_end":30436,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ Key derivation is important when you want to use the same key in multiple","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30437,"byte_end":30514,"line_start":843,"line_end":843,"column_start":1,"column_end":78}},{"value":"/ algorithms or use cases. Using the same key with different cryptographic","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30515,"byte_end":30591,"line_start":844,"line_end":844,"column_start":1,"column_end":77}},{"value":"/ algorithms is generally forbidden, and deriving a separate subkey for each","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30592,"byte_end":30670,"line_start":845,"line_end":845,"column_start":1,"column_end":79}},{"value":"/ use case protects you from bad interactions. Derived keys also mitigate the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30671,"byte_end":30750,"line_start":846,"line_end":846,"column_start":1,"column_end":80}},{"value":"/ damage from one part of your application accidentally leaking its key.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30751,"byte_end":30825,"line_start":847,"line_end":847,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30826,"byte_end":30829,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ As a rare exception to that general rule, however, it is possible to use","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30830,"byte_end":30906,"line_start":849,"line_end":849,"column_start":1,"column_end":77}},{"value":"/ `derive_key` itself with key material that you are already using with","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30907,"byte_end":30980,"line_start":850,"line_end":850,"column_start":1,"column_end":74}},{"value":"/ another algorithm. You might need to do this if you're adding features to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":30981,"byte_end":31058,"line_start":851,"line_end":851,"column_start":1,"column_end":78}},{"value":"/ an existing application, which does not yet use key derivation internally.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31059,"byte_end":31137,"line_start":852,"line_end":852,"column_start":1,"column_end":79}},{"value":"/ However, you still must not share key material with algorithms that forbid","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31138,"byte_end":31216,"line_start":853,"line_end":853,"column_start":1,"column_end":79}},{"value":"/ key reuse entirely, like a one-time pad. For more on this, see sections 6.2","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31217,"byte_end":31296,"line_start":854,"line_end":854,"column_start":1,"column_end":80}},{"value":"/ and 7.8 of the [BLAKE3 paper](https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31297,"byte_end":31399,"line_start":855,"line_end":855,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31400,"byte_end":31403,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ Note that BLAKE3 is not a password hash, and **`derive_key` should never be","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31404,"byte_end":31483,"line_start":857,"line_end":857,"column_start":1,"column_end":80}},{"value":"/ used with passwords.** Instead, use a dedicated password hash like","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31484,"byte_end":31554,"line_start":858,"line_end":858,"column_start":1,"column_end":71}},{"value":"/ [Argon2]. Password hashes are entirely different from generic hash","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31555,"byte_end":31625,"line_start":859,"line_end":859,"column_start":1,"column_end":71}},{"value":"/ functions, with opposite design requirements.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31626,"byte_end":31675,"line_start":860,"line_end":860,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31676,"byte_end":31679,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::new_derive_key`],","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31680,"byte_end":31753,"line_start":862,"line_end":862,"column_start":1,"column_end":74}},{"value":"/ [`Hasher::finalize_xof`], and [`OutputReader`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31754,"byte_end":31805,"line_start":863,"line_end":863,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31806,"byte_end":31809,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31810,"byte_end":31886,"line_start":865,"line_end":865,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::new_derive_key`] and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31887,"byte_end":31921,"line_start":866,"line_end":866,"column_start":1,"column_end":35}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31922,"byte_end":31991,"line_start":867,"line_end":867,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31992,"byte_end":31995,"line_start":868,"line_end":868,"column_start":1,"column_end":4}},{"value":"/ [Argon2]: https://en.wikipedia.org/wiki/Argon2","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":31996,"byte_end":32046,"line_start":869,"line_end":869,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34624,"byte_end":34630,"line_start":942,"line_end":942,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":" An incremental hash state that can accept any number of writes.","sig":null,"attributes":[{"value":"/ An incremental hash state that can accept any number of writes.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":32927,"byte_end":32994,"line_start":900,"line_end":900,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":32995,"byte_end":32998,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ When the `traits-preview` Cargo feature is enabled, this type implements","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":32999,"byte_end":33075,"line_start":902,"line_end":902,"column_start":1,"column_end":77}},{"value":"/ several commonly used traits from the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33076,"byte_end":33117,"line_start":903,"line_end":903,"column_start":1,"column_end":42}},{"value":"/ [`digest`](https://crates.io/crates/digest) and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33118,"byte_end":33169,"line_start":904,"line_end":904,"column_start":1,"column_end":52}},{"value":"/ [`crypto_mac`](https://crates.io/crates/crypto-mac) crates. However, those","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33170,"byte_end":33248,"line_start":905,"line_end":905,"column_start":1,"column_end":79}},{"value":"/ traits aren't stable, and they're expected to change in incompatible ways","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33249,"byte_end":33326,"line_start":906,"line_end":906,"column_start":1,"column_end":78}},{"value":"/ before those crates reach 1.0. For that reason, this crate makes no SemVer","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33327,"byte_end":33405,"line_start":907,"line_end":907,"column_start":1,"column_end":79}},{"value":"/ guarantees for this feature, and callers who use it should expect breaking","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33406,"byte_end":33484,"line_start":908,"line_end":908,"column_start":1,"column_end":79}},{"value":"/ changes between patch versions.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33485,"byte_end":33520,"line_start":909,"line_end":909,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33521,"byte_end":33524,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ When the `rayon` Cargo feature is enabled, the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33525,"byte_end":33575,"line_start":911,"line_end":911,"column_start":1,"column_end":51}},{"value":"/ [`update_rayon`](#method.update_rayon) method is available for multithreaded","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33576,"byte_end":33656,"line_start":912,"line_end":912,"column_start":1,"column_end":81}},{"value":"/ hashing.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33657,"byte_end":33669,"line_start":913,"line_end":913,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33670,"byte_end":33673,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ **Performance note:** The [`update`](#method.update) method can't take full","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33674,"byte_end":33753,"line_start":915,"line_end":915,"column_start":1,"column_end":80}},{"value":"/ advantage of SIMD optimizations if its input buffer is too small or oddly","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33754,"byte_end":33831,"line_start":916,"line_end":916,"column_start":1,"column_end":78}},{"value":"/ sized. Using a 16 KiB buffer, or any multiple of that, enables all currently","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33832,"byte_end":33912,"line_start":917,"line_end":917,"column_start":1,"column_end":81}},{"value":"/ supported SIMD instruction sets.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33913,"byte_end":33949,"line_start":918,"line_end":918,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33950,"byte_end":33953,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33954,"byte_end":33968,"line_start":920,"line_end":920,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33969,"byte_end":33972,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33973,"byte_end":33980,"line_start":922,"line_end":922,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":33981,"byte_end":34040,"line_start":923,"line_end":923,"column_start":1,"column_end":60}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34041,"byte_end":34076,"line_start":924,"line_end":924,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34077,"byte_end":34120,"line_start":925,"line_end":925,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34121,"byte_end":34147,"line_start":926,"line_end":926,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34148,"byte_end":34174,"line_start":927,"line_end":927,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34175,"byte_end":34201,"line_start":928,"line_end":928,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(hasher.finalize(), blake3::hash(b\"foobarbaz\"));","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34202,"byte_end":34264,"line_start":929,"line_end":929,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34265,"byte_end":34268,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34269,"byte_end":34336,"line_start":931,"line_end":931,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34337,"byte_end":34368,"line_start":932,"line_end":932,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34369,"byte_end":34400,"line_start":933,"line_end":933,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34401,"byte_end":34451,"line_start":934,"line_end":934,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34452,"byte_end":34488,"line_start":935,"line_end":935,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], blake3::hash(b\"foobarbaz\").as_bytes());","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34489,"byte_end":34558,"line_start":936,"line_end":936,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34559,"byte_end":34566,"line_start":937,"line_end":937,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34567,"byte_end":34579,"line_start":938,"line_end":938,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34580,"byte_end":34587,"line_start":939,"line_end":939,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":34588,"byte_end":34595,"line_start":940,"line_end":940,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35411,"byte_end":35414,"line_start":963,"line_end":963,"column_start":12,"column_end":15},"name":"new","qualname":"<Hasher>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the regular hash function.\n","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the regular hash function.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35340,"byte_end":35399,"line_start":962,"line_end":962,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35620,"byte_end":35629,"line_start":971,"line_end":971,"column_start":12,"column_end":21},"name":"new_keyed","qualname":"<Hasher>::new_keyed","value":"pub fn new_keyed(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the keyed hash function. See\n [`keyed_hash`].","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the keyed hash function. See","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35472,"byte_end":35533,"line_start":967,"line_end":967,"column_start":5,"column_end":66}},{"value":"/ [`keyed_hash`].","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35538,"byte_end":35557,"line_start":968,"line_end":968,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35562,"byte_end":35565,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ [`keyed_hash`]: fn.keyed_hash.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35570,"byte_end":35608,"line_start":970,"line_end":970,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36029,"byte_end":36043,"line_start":981,"line_end":981,"column_start":12,"column_end":26},"name":"new_derive_key","qualname":"<Hasher>::new_derive_key","value":"pub fn new_derive_key(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the key derivation function. See\n [`derive_key`]. The context string should be hardcoded, globally\n unique, and application-specific.","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the key derivation function. See","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35786,"byte_end":35851,"line_start":976,"line_end":976,"column_start":5,"column_end":70}},{"value":"/ [`derive_key`]. The context string should be hardcoded, globally","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35856,"byte_end":35924,"line_start":977,"line_end":977,"column_start":5,"column_end":73}},{"value":"/ unique, and application-specific.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35929,"byte_end":35966,"line_start":978,"line_end":978,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35971,"byte_end":35974,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ [`derive_key`]: fn.derive_key.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35979,"byte_end":36017,"line_start":980,"line_end":980,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36586,"byte_end":36591,"line_start":993,"line_end":993,"column_start":12,"column_end":17},"name":"reset","qualname":"<Hasher>::reset","value":"pub fn reset(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Hasher` to its initial state.","sig":null,"attributes":[{"value":"/ Reset the `Hasher` to its initial state.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36387,"byte_end":36431,"line_start":989,"line_end":989,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36436,"byte_end":36439,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ This is functionally the same as overwriting the `Hasher` with a new","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36444,"byte_end":36516,"line_start":991,"line_end":991,"column_start":5,"column_end":77}},{"value":"/ one, using the same key or context string if any.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":36521,"byte_end":36574,"line_start":992,"line_end":992,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":41204,"byte_end":41210,"line_start":1083,"line_end":1083,"column_start":12,"column_end":18},"name":"update","qualname":"<Hasher>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state. You can call this any number of\n times.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state. You can call this any number of","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40459,"byte_end":40529,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ times.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40534,"byte_end":40544,"line_start":1070,"line_end":1070,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40549,"byte_end":40552,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ This method is always single-threaded. For multithreading support, see","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40557,"byte_end":40631,"line_start":1072,"line_end":1072,"column_start":5,"column_end":79}},{"value":"/ [`update_rayon`](#method.update_rayon) below (enabled with the `rayon`","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40636,"byte_end":40710,"line_start":1073,"line_end":1073,"column_start":5,"column_end":79}},{"value":"/ Cargo feature).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40715,"byte_end":40734,"line_start":1074,"line_end":1074,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40739,"byte_end":40742,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Note that the degree of SIMD parallelism that `update` can use is","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40747,"byte_end":40816,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ limited by the size of this input buffer. The 8 KiB buffer currently","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40821,"byte_end":40893,"line_start":1077,"line_end":1077,"column_start":5,"column_end":77}},{"value":"/ used by [`std::io::copy`] is enough to leverage AVX2, for example, but","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40898,"byte_end":40972,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"/ not enough to leverage AVX-512. A 16 KiB buffer is large enough to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":40977,"byte_end":41047,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ leverage all currently supported SIMD instruction sets.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":41052,"byte_end":41111,"line_start":1080,"line_end":1080,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":41116,"byte_end":41119,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":41124,"byte_end":41192,"line_start":1082,"line_end":1082,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51538,"byte_end":51546,"line_start":1290,"line_end":1290,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Hasher>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return the [`Hash`](struct.Hash.html) of\n the input.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return the [`Hash`](struct.Hash.html) of","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51292,"byte_end":51364,"line_start":1285,"line_end":1285,"column_start":5,"column_end":77}},{"value":"/ the input.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51369,"byte_end":51383,"line_start":1286,"line_end":1286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51388,"byte_end":51391,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51396,"byte_end":51470,"line_start":1288,"line_end":1288,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51475,"byte_end":51526,"line_start":1289,"line_end":1289,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51941,"byte_end":51953,"line_start":1301,"line_end":1301,"column_start":12,"column_end":24},"name":"finalize_xof","qualname":"<Hasher>::finalize_xof","value":"pub fn finalize_xof(&Self) -> OutputReader","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return an [`OutputReader`], which can\n supply any number of output bytes.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return an [`OutputReader`], which can","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51615,"byte_end":51684,"line_start":1294,"line_end":1294,"column_start":5,"column_end":74}},{"value":"/ supply any number of output bytes.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51689,"byte_end":51727,"line_start":1295,"line_end":1295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51732,"byte_end":51735,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51740,"byte_end":51814,"line_start":1297,"line_end":1297,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51819,"byte_end":51870,"line_start":1298,"line_end":1298,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51875,"byte_end":51878,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ [`OutputReader`]: struct.OutputReader.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":51883,"byte_end":51929,"line_start":1300,"line_end":1300,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52100,"byte_end":52105,"line_start":1306,"line_end":1306,"column_start":12,"column_end":17},"name":"count","qualname":"<Hasher>::count","value":"pub fn count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes hashed so far.\n","sig":null,"attributes":[{"value":"/ Return the total number of bytes hashed so far.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52037,"byte_end":52088,"line_start":1305,"line_end":1305,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":688},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53673,"byte_end":53685,"line_start":1357,"line_end":1357,"column_start":12,"column_end":24},"name":"OutputReader","qualname":"::OutputReader","value":"OutputReader {  }","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" An incremental reader for extended output, returned by\n [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","sig":null,"attributes":[{"value":"/ An incremental reader for extended output, returned by","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52979,"byte_end":53037,"line_start":1343,"line_end":1343,"column_start":1,"column_end":59}},{"value":"/ [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53038,"byte_end":53107,"line_start":1344,"line_end":1344,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53108,"byte_end":53111,"line_start":1345,"line_end":1345,"column_start":1,"column_end":4}},{"value":"/ Outputs shorter than the default length of 32 bytes (256 bits)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53112,"byte_end":53178,"line_start":1346,"line_end":1346,"column_start":1,"column_end":67}},{"value":"/ provide less security. An N-bit BLAKE3 output is intended to provide","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53179,"byte_end":53251,"line_start":1347,"line_end":1347,"column_start":1,"column_end":73}},{"value":"/ N bits of first and second preimage resistance and N/2 bits of","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53252,"byte_end":53318,"line_start":1348,"line_end":1348,"column_start":1,"column_end":67}},{"value":"/ collision resistance, for any N up to 256. Longer outputs don't","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53319,"byte_end":53386,"line_start":1349,"line_end":1349,"column_start":1,"column_end":68}},{"value":"/ provide any additional security.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53387,"byte_end":53423,"line_start":1350,"line_end":1350,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53424,"byte_end":53427,"line_start":1351,"line_end":1351,"column_start":1,"column_end":4}},{"value":"/ Shorter BLAKE3 outputs are prefixes of longer ones. Explicitly","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53428,"byte_end":53494,"line_start":1352,"line_end":1352,"column_start":1,"column_end":67}},{"value":"/ requesting a short output is equivalent to truncating the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53495,"byte_end":53556,"line_start":1353,"line_end":1353,"column_start":1,"column_end":62}},{"value":"/ default-length output. (Note that this is different between BLAKE2","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53557,"byte_end":53627,"line_start":1354,"line_end":1354,"column_start":1,"column_end":71}},{"value":"/ and BLAKE3.)","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53628,"byte_end":53644,"line_start":1355,"line_end":1355,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54712,"byte_end":54716,"line_start":1385,"line_end":1385,"column_start":12,"column_end":16},"name":"fill","qualname":"<OutputReader>::fill","value":"pub fn fill(&mut Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Fill a buffer with output bytes and advance the position of the\n `OutputReader`. This is equivalent to [`Read::read`], except that it\n doesn't return a `Result`. Both methods always fill the entire buffer.","sig":null,"attributes":[{"value":"/ Fill a buffer with output bytes and advance the position of the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53890,"byte_end":53957,"line_start":1370,"line_end":1370,"column_start":5,"column_end":72}},{"value":"/ `OutputReader`. This is equivalent to [`Read::read`], except that it","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53962,"byte_end":54034,"line_start":1371,"line_end":1371,"column_start":5,"column_end":77}},{"value":"/ doesn't return a `Result`. Both methods always fill the entire buffer.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54039,"byte_end":54113,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54118,"byte_end":54121,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ Note that `OutputReader` doesn't buffer output bytes internally, so","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54126,"byte_end":54197,"line_start":1374,"line_end":1374,"column_start":5,"column_end":76}},{"value":"/ calling `fill` repeatedly with a short-length or odd-length slice will","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54202,"byte_end":54276,"line_start":1375,"line_end":1375,"column_start":5,"column_end":79}},{"value":"/ end up performing the same compression multiple times. If you're","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54281,"byte_end":54349,"line_start":1376,"line_end":1376,"column_start":5,"column_end":73}},{"value":"/ reading output in a loop, prefer a slice length that's a multiple of","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54354,"byte_end":54426,"line_start":1377,"line_end":1377,"column_start":5,"column_end":77}},{"value":"/ 64.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54431,"byte_end":54438,"line_start":1378,"line_end":1378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54443,"byte_end":54446,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ The maximum output size of BLAKE3 is 2<sup>64</sup>-1 bytes. If you try","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54451,"byte_end":54526,"line_start":1380,"line_end":1380,"column_start":5,"column_end":80}},{"value":"/ to extract more than that, for example by seeking near the end and","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54531,"byte_end":54601,"line_start":1381,"line_end":1381,"column_start":5,"column_end":75}},{"value":"/ reading further, the behavior is unspecified.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54606,"byte_end":54655,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54660,"byte_end":54663,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":54668,"byte_end":54700,"line_start":1384,"line_end":1384,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55816,"byte_end":55824,"line_start":1409,"line_end":1409,"column_start":12,"column_end":20},"name":"position","qualname":"<OutputReader>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current read position in the output stream. This is\n equivalent to [`Seek::stream_position`], except that it doesn't return\n a `Result`. The position of a new `OutputReader` starts at 0, and each\n call to [`fill`] or [`Read::read`] moves the position forward by the\n number of bytes read.","sig":null,"attributes":[{"value":"/ Return the current read position in the output stream. This is","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55338,"byte_end":55404,"line_start":1400,"line_end":1400,"column_start":5,"column_end":71}},{"value":"/ equivalent to [`Seek::stream_position`], except that it doesn't return","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55409,"byte_end":55483,"line_start":1401,"line_end":1401,"column_start":5,"column_end":79}},{"value":"/ a `Result`. The position of a new `OutputReader` starts at 0, and each","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55488,"byte_end":55562,"line_start":1402,"line_end":1402,"column_start":5,"column_end":79}},{"value":"/ call to [`fill`] or [`Read::read`] moves the position forward by the","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55567,"byte_end":55639,"line_start":1403,"line_end":1403,"column_start":5,"column_end":77}},{"value":"/ number of bytes read.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55644,"byte_end":55669,"line_start":1404,"line_end":1404,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55674,"byte_end":55677,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ [`Seek::stream_position`]: #method.stream_position","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55682,"byte_end":55736,"line_start":1406,"line_end":1406,"column_start":5,"column_end":59}},{"value":"/ [`fill`]: #method.fill","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55741,"byte_end":55767,"line_start":1407,"line_end":1407,"column_start":5,"column_end":31}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55772,"byte_end":55804,"line_start":1408,"line_end":1408,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56254,"byte_end":56266,"line_start":1419,"line_end":1419,"column_start":12,"column_end":24},"name":"set_position","qualname":"<OutputReader>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Seek to a new read position in the output stream. This is equivalent to\n calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't\n return a `Result`.","sig":null,"attributes":[{"value":"/ Seek to a new read position in the output stream. This is equivalent to","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":55934,"byte_end":56009,"line_start":1413,"line_end":1413,"column_start":5,"column_end":80}},{"value":"/ calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56014,"byte_end":56089,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/ return a `Result`.","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56094,"byte_end":56116,"line_start":1415,"line_end":1415,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56121,"byte_end":56124,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ [`Seek::seek`]: #method.seek","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56129,"byte_end":56161,"line_start":1417,"line_end":1417,"column_start":5,"column_end":37}},{"value":"/ [`SeekFrom::Start`]: https://doc.rust-lang.org/std/io/enum.SeekFrom.html","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56166,"byte_end":56242,"line_start":1418,"line_end":1418,"column_start":5,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58377,"byte_end":58387,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62335,"byte_end":62343,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85084,"byte_end":85090,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85146,"byte_end":85152,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85288,"byte_end":85294,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85420,"byte_end":85426,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85832,"byte_end":85838,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86166,"byte_end":86178,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86303,"byte_end":86309,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86522,"byte_end":86528,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/join.rs","byte_start":91699,"byte_end":91709,"line_start":39,"line_end":39,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7393,"byte_end":7397,"line_start":204,"line_end":204,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":9636,"byte_end":9640,"line_start":261,"line_end":261,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":9866,"byte_end":9870,"line_start":275,"line_end":275,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10049,"byte_end":10053,"line_start":284,"line_end":284,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10261,"byte_end":10265,"line_start":292,"line_end":292,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10501,"byte_end":10505,"line_start":300,"line_end":300,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10643,"byte_end":10647,"line_start":307,"line_end":307,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10674,"byte_end":10678,"line_start":309,"line_end":309,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11079,"byte_end":11083,"line_start":321,"line_end":321,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11957,"byte_end":11965,"line_start":347,"line_end":347,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":12534,"byte_end":12542,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":12956,"byte_end":12962,"line_start":380,"line_end":380,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":14037,"byte_end":14047,"line_start":423,"line_end":423,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":16820,"byte_end":16830,"line_start":511,"line_end":511,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18148,"byte_end":18164,"line_start":545,"line_end":545,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35100,"byte_end":35106,"line_start":953,"line_end":953,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52298,"byte_end":52304,"line_start":1312,"line_end":1312,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52559,"byte_end":52565,"line_start":1321,"line_end":1321,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52686,"byte_end":52692,"line_start":1329,"line_end":1329,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53746,"byte_end":53758,"line_start":1362,"line_end":1362,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56513,"byte_end":56525,"line_start":1426,"line_end":1426,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56753,"byte_end":56765,"line_start":1435,"line_end":1435,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56951,"byte_end":56963,"line_start":1444,"line_end":1444,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":3233,"byte_end":3237,"line_start":80,"line_end":80,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":3315,"byte_end":3323,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":3984,"byte_end":3990,"line_start":115,"line_end":115,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":140}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/guts.rs","byte_start":58377,"byte_end":58387,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/platform.rs","byte_start":62335,"byte_end":62343,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85084,"byte_end":85090,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":673},"to":{"krate":25,"index":231}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85146,"byte_end":85152,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":673},"to":{"krate":25,"index":226}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85288,"byte_end":85294,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":673},"to":{"krate":25,"index":233}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85420,"byte_end":85426,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":673},"to":{"krate":25,"index":106}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":85832,"byte_end":85838,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":673},"to":{"krate":25,"index":165}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86166,"byte_end":86178,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":688},"to":{"krate":25,"index":162}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86303,"byte_end":86309,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":673},"to":{"krate":19,"index":45}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/traits.rs","byte_start":86522,"byte_end":86528,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":673},"to":{"krate":19,"index":49}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/join.rs","byte_start":91699,"byte_end":91709,"line_start":39,"line_end":39,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":198},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":7393,"byte_end":7397,"line_start":204,"line_end":204,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":9636,"byte_end":9640,"line_start":261,"line_end":261,"column_start":30,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":9866,"byte_end":9870,"line_start":275,"line_end":275,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":11879}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10049,"byte_end":10053,"line_start":284,"line_end":284,"column_start":20,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10261,"byte_end":10265,"line_start":292,"line_end":292,"column_start":35,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10501,"byte_end":10505,"line_start":300,"line_end":300,"column_start":26,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10643,"byte_end":10647,"line_start":307,"line_end":307,"column_start":13,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":10674,"byte_end":10678,"line_start":309,"line_end":309,"column_start":23,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11079,"byte_end":11083,"line_start":321,"line_end":321,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":11957,"byte_end":11965,"line_start":347,"line_end":347,"column_start":23,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":606},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":12534,"byte_end":12542,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":606},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":12956,"byte_end":12962,"line_start":380,"line_end":380,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":14037,"byte_end":14047,"line_start":423,"line_end":423,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":16820,"byte_end":16830,"line_start":511,"line_end":511,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":18148,"byte_end":18164,"line_start":545,"line_end":545,"column_start":6,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":35100,"byte_end":35106,"line_start":953,"line_end":953,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52298,"byte_end":52304,"line_start":1312,"line_end":1312,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52559,"byte_end":52565,"line_start":1321,"line_end":1321,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":52686,"byte_end":52692,"line_start":1329,"line_end":1329,"column_start":25,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":4402}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":53746,"byte_end":53758,"line_start":1362,"line_end":1362,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56513,"byte_end":56525,"line_start":1426,"line_end":1426,"column_start":21,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56753,"byte_end":56765,"line_start":1435,"line_end":1435,"column_start":24,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":688},"to":{"krate":1,"index":4342}},{"span":{"file_name":"/Users/khalilbrown/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.2.0/src/lib.rs","byte_start":56951,"byte_end":56963,"line_start":1444,"line_end":1444,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":688},"to":{"krate":1,"index":4420}}]}